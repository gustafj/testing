language: minimal

stages:
  - install
  - build
  - name: deploy
    if: branch = master

addons:
  apt:
    packages:
      - tree

# Cache all the generated files between stages (and builds)
cache:
  directories:
    - build

# Skip any language defaults
install: skip

# Skip any language defaults
script: skip

jobs:
  include:
    # Golang
    - stage: install
      name: "Go: Clean cache, install protoc compiler and fetch gRPC protoc plugin"
      language: go
      go: "1.10"
      before_install:
        - tree build
        - rm -rf build
      install:
        - chmod +x ./.travis/install_protoc.sh
        - ./.travis/install_protoc.sh
        - tree build/protoc/
      script:
        - go get -u github.com/golang/protobuf/protoc-gen-go
        - export PATH=$PATH:$GOPATH/bin

    - stage: build
      name: "Go: Generate sources"
      language: go
      go: "1.10"
      script:
        - tree build
        - tree $GOPATH
        - mkdir -p build/go
        - echo "$TRAVIS_BUILD_NUMBER" >> build/go/generated.txt
        - tree build/go

    - stage: deploy
      name: "Go: Deploy generated sources back to repo"
      deploy:
        provider: pages
        local-dir: build/go/
        target-branch: go1
        keep-history: true
        github-token: $GITHUB_TOKEN
        skip_cleanup: true
        verbose: true

    # C# & .NET
    - stage: install
      name: "C#: Clean out and fetch protoc & gRPC protoc plugin"
      language: csharp
      mono: none
      dotnet: 2.0
      before_install:
        - tree build
        - rm -rf build
      install:
        - mkdir -p build/csharp_project
        - pushd build/csharp_project
        - dotnet new console
        - env NUGET_PACKAGES=$PWD/packages dotnet add package grpc.tools
        - popd

    - stage: build
      name: "C#: Generate sources and build .NET nupkg"
      language: csharp
      mono: none
      dotnet: 2.0
      script:
        - tree build
        - tree $GOPATH
        - mkdir -p build/csharp
        - ls -la build/csharp_project/packages/grpc.tools/*/tools/linux_x64/
        - echo "$TRAVIS_BUILD_NUMBER" >> build/csharp/generated.txt
        - tree build/csharp
      after_success:
        - touch build/csharp/gen.$TRAVIS_BUILD_NUMBER.nupkg

    - stage: deploy
      name: "C#: Deploy generated sources back to repo"
      deploy:
        provider: pages
        local-dir: build/csharp/
        target-branch: csharp
        keep-history: true
        github-token: $GITHUB_TOKEN
        skip_cleanup: true
        verbose: true

    # Python
    - stage: install
      name: "Python: Clean out cache"
      language: python
      python: "3.6"
      before_install:
        - tree build
        - rm -rf build

    - stage: build
      name: "Python: Generate sources and build wheel pkg"
      language: python
      python: "3.6"
      script:
        - tree build
        - mkdir -p build/python
        - echo "$TRAVIS_BUILD_NUMBER" >> build/python/generated.txt
        - tree build/python
      after_success:
        - touch build/python/gen.$TRAVIS_BUILD_NUMBER.whl

      # Deploy Python generated sources back to repo
      # Deploy .NET nupkg to NuGet
      # Deploy wheel to PyPi

